<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ksb</groupId>
	<artifactId>ksb-parent_2.11</artifactId>
	<version>19.03-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>KSB Parent POM</name>
	<properties>
		<rootDir>${session.executionRootDirectory}</rootDir>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<hadoop.version>2.7.3</hadoop.version>
		<java.version>1.8</java.version>
		<maven.version.min>3.3.9</maven.version.min>
		<scala.minor.version>2.11</scala.minor.version>
		<scala.complete.version>${scala.minor.version}.8</scala.complete.version>
		<spark.version>2.3.0</spark.version>
		<kafka.version>0.10.0.1</kafka.version>

		<!-- paths -->
		<protobuf.input.directory>${project.basedir}/src/main/proto</protobuf.input.directory>
		<protobuf.output.directory>${project.build.directory}/generated-sources</protobuf.output.directory>
		<project.install.directory>${project.basedir}/../jars/${project.version}</project.install.directory>

		<!-- library versions -->
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
		<maven-shade-plugin.version>2.4.2</maven-shade-plugin.version>
		<os-maven-plugin.version>1.4.1.Final</os-maven-plugin.version>
		<protobuf.version>3.11.4</protobuf.version>
		<protobuf.util.version>3.11.4</protobuf.util.version>
		<exec-maven-plugin.version>1.5.0</exec-maven-plugin.version>
		<phoenix.version>4.10.0-HBase-1.2</phoenix.version>
		<hbase.version>1.2.3</hbase.version>
		<tensorflow.version>1.11.0</tensorflow.version>
		<grpc.version>1.7.0</grpc.version>

		<snappy.version>1.1.7.1</snappy.version>
		<hadoop.deps.scope>compile</hadoop.deps.scope>

		<cdap.version>3.6.0</cdap.version>
		<slf4j.version>1.7.5</slf4j.version>
		<gson.version>2.2.4</gson.version>
		<scalikejdbc.version>2.5.2</scalikejdbc.version>
		<postgresql.version>42.1.1</postgresql.version>
		<mongo.spark.version>2.1.0</mongo.spark.version>

		<log4j.version>2.8</log4j.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.typesafe.play</groupId>
				<artifactId>play-json_${scala.minor.version}</artifactId>
				<version>2.6.0</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-actor_${scala.minor.version}</artifactId>
				<version>2.4.17</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-stream_${scala.minor.version}</artifactId>
				<version>2.4.17</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-http_${scala.minor.version}</artifactId>
				<version>10.0.5</version>
			</dependency>
			<dependency>
				<groupId>com.typesafe.akka</groupId>
				<artifactId>akka-http-spray-json_${scala.minor.version}</artifactId>
				<version>10.0.5</version>
			</dependency>
			<dependency>
				<groupId>org.apache.phoenix</groupId>
				<artifactId>phoenix-core</artifactId>
				<version>${phoenix.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.phoenix</groupId>
				<artifactId>phoenix-queryserver-client</artifactId>
				<version>${phoenix.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.phoenix</groupId>
				<artifactId>phoenix-spark</artifactId>
				<version>${phoenix.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java-util</artifactId>
				<version>${protobuf.util.version}</version>
			</dependency>
			<dependency>
				<groupId>com.trueaccord.scalapb</groupId>
				<artifactId>scalapb-runtime_${scala.minor.version}</artifactId>
				<version>0.5.0</version>
			</dependency>
			<dependency>
				<groupId>com.trueaccord.scalapb</groupId>
				<artifactId>compilerplugin_2.10</artifactId>
				<version>0.5.29</version>
			</dependency>
			<dependency>
				<groupId>net.sandrogrzicic</groupId>
				<artifactId>scalabuff-compiler_2.10</artifactId>
				<version>1.3.6</version>
			</dependency>
			<dependency>
				<groupId>net.sandrogrzicic</groupId>
				<artifactId>scalabuff-runtime_2.10</artifactId>
				<version>1.3.6</version>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-library</artifactId>
				<version>${scala.complete.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scalap</artifactId>
				<version>${scala.complete.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.scala-lang</groupId>
				<artifactId>scala-compiler</artifactId>
				<version>${scala.complete.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.scalaj</groupId>
				<artifactId>scalaj-http_${scala.minor.version}</artifactId>
				<version>2.3.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-core_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming-0-10_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-streaming-kafka-0-10_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<exclusions>
					<exclusion>
						<groupId>net.jpountz.lz4</groupId>
						<artifactId>lz4</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-sql-kafka-0-10_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<exclusions>
					<exclusion>
						<groupId>net.jpountz.lz4</groupId>
						<artifactId>lz4</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-mllib_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-graphx_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-common</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-hdfs</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-mapreduce-client-core</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-streaming</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-api</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-common</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-server-common</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-server-nodemanager</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-server-resourcemanager</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-client</artifactId>
				<version>${hadoop.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hadoop</groupId>
				<artifactId>hadoop-yarn-client</artifactId>
				<version>${hadoop.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.spark</groupId>
				<artifactId>spark-yarn_${scala.minor.version}</artifactId>
				<version>${spark.version}</version>
				<scope>provided</scope>
			</dependency>
			<!-- Added for spark-2.3 -->
			<dependency>
				<groupId>com.ning</groupId>
				<artifactId>compress-lzf</artifactId>
				<version>1.0.3</version>
			</dependency>
			<dependency>
				<groupId>org.xerial.snappy</groupId>
				<artifactId>snappy-java</artifactId>
				<version>${snappy.version}</version>
				<scope>${hadoop.deps.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.lz4</groupId>
				<artifactId>lz4-java</artifactId>
				<version>1.4.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-common</artifactId>
				<version>${hbase.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.hbase</groupId>
				<artifactId>hbase-client</artifactId>
				<version>${hbase.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-math3</artifactId>
				<version>3.4.1</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.7</version>
			</dependency>
			<dependency>
				<groupId>com.github.nscala-time</groupId>
				<artifactId>nscala-time_${scala.minor.version}</artifactId>
				<version>1.8.0</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.9.3</version>
			</dependency>
			<dependency>
				<groupId>org.joda</groupId>
				<artifactId>joda-convert</artifactId>
				<version>1.8.1</version>
			</dependency>
			<dependency>
				<groupId>org.tensorflow</groupId>
				<artifactId>tensorflow</artifactId>
				<version>${tensorflow.version}</version>
			</dependency>
			<dependency>
				<groupId>org.tensorflow</groupId>
				<artifactId>proto</artifactId>
				<version>${tensorflow.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-protobuf</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-stub</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>io.grpc</groupId>
				<artifactId>grpc-okhttp</artifactId>
				<version>${grpc.version}</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.11</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>com.hortonworks</groupId>
				<artifactId>shc-core</artifactId>
				<version>1.1.2-2.2-s_2.11-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-1.2-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api-scala_${scala.minor.version}</artifactId>
				<version>${log4j.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.minor.version}</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.minor.version}</artifactId>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.minor.version}</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_${scala.minor.version}</artifactId>
			<version>${kafka.version}</version>
			<exclusions>
				<exclusion>
					<groupId>net.jpountz.lz4</groupId>
					<artifactId>lz4</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-can_${scala.minor.version}</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-routing_${scala.minor.version}</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-json_${scala.minor.version}</artifactId>
			<version>1.3.2</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-client_${scala.minor.version}</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>io.spray</groupId>
			<artifactId>spray-http_${scala.minor.version}</artifactId>
			<version>1.3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api-scala_${scala.minor.version}</artifactId>
		</dependency>
		<dependency>
			<groupId>org.tensorflow</groupId>
			<artifactId>tensorflow</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.tensorflow</groupId>
					<artifactId>libtensorflow_jni</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.tensorflow</groupId>
			<artifactId>proto</artifactId>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http_${scala.minor.version}</artifactId>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-http-spray-json_${scala.minor.version}</artifactId>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>${os-maven-plugin.version}</version>
			</extension>
		</extensions>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<tasks>
									<copy file="${project.basedir}/protoc" tofile="${project.build.directory}/protoc" />
								</tasks>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<executions>
						<execution>
							<id>exec-protoc</id>
							<phase>generate-sources</phase>
							<configuration>
								<target>
									<property name="protoc.filename" value="protoc" />
									<property name="protoc.filepath"
										value="${project.build.directory}/${protoc.filename}" />
									<chmod file="${protoc.filepath}" perm="ugo+rx" />
									<mkdir dir="${protobuf.output.directory}" />
									<path id="protobuf.input.filepaths.path">
										<fileset dir="${protobuf.input.directory}">
											<include name="**/*.proto" />
										</fileset>
									</path>
									<pathconvert pathsep=" " property="protobuf.input.filepaths"
										refid="protobuf.input.filepaths.path" />
									<exec executable="${protoc.filepath}" failonerror="true">
										<arg value="-I" />
										<arg value="${protobuf.input.directory}" />
										<arg value="--java_out" />
										<arg value="${protobuf.output.directory}" />
										<arg line="${protobuf.input.filepaths}" />
									</exec>
								</target>
							</configuration>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>add-classes</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>${protobuf.output.directory}</source>
								</sources>
							</configuration>
						</execution>
						<execution>
							<id>add-test-source</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-test-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>src/test/scala</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.4.1</version>
					<executions>
						<execution>
							<id>enforce</id>
							<configuration>
								<rules>
									<requireModuleConvergence />
									<requireMavenVersion>
										<version>${maven.version.min}</version>
									</requireMavenVersion>
									<requireJavaVersion>
										<version>${java.version}</version>
									</requireJavaVersion>
								</rules>
							</configuration>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.rat</groupId>
					<artifactId>apache-rat-plugin</artifactId>
					<version>0.11</version>
					<configuration>
						<excludes>
							<exclude>**/*.iml</exclude>
							<exclude>**/*.md</exclude>
							<exclude>**/*.txt</exclude>
							<exclude>**/*.geojson</exclude>
							<exclude>**/target/**</exclude>
							<exclude>**/dependency-reduced-pom.xml</exclude>
							<exclude>.travis.yml</exclude>
						</excludes>
						<licenses>
							<license
								implementation="org.apache.rat.analysis.license.SimplePatternBasedLicense">
								<patterns>
									<pattern>Copyright 2015 Sanford Ryza, Uri Laserson, Sean Owen
										and Joshua Wills</pattern>
								</patterns>
							</license>
						</licenses>
					</configuration>
					<executions>
						<execution>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<!-- workaround for Xerces warnings -->
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-core</artifactId>
							<version>1.6</version>
							<exclusions>
								<exclusion>
									<groupId>xerces</groupId>
									<artifactId>xercesImpl</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.2</version>
					<executions>
						<execution>
							<id>scala-add-source</id>
							<goals>
								<goal>add-source</goal>
							</goals>
						</execution>
						<execution>
							<id>scala-compile</id>
							<phase>process-resources</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>scala-test-compile</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<useIncrementalCompilation>true</useIncrementalCompilation>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<version>2.3.7</version>
					<extensions>true</extensions>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${app.orchestrator.main.class}</mainClass>
							</manifest>
						</archive>
						<instructions>
							<Embed-Dependency>*;inline=false;scope=compile</Embed-Dependency>
							<Embed-Transitive>true</Embed-Transitive>
							<Embed-Directory>lib</Embed-Directory>
						</instructions>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>bundle</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<id>auto-clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
							<configuration>
								<filesets>
									<fileset>
										<directory>${project.install.directory}</directory>
										<includes>**/*</includes>
									</fileset>
								</filesets>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.0.0</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<skipIfEmpty>true</skipIfEmpty>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.14.1</version>
				</plugin>

				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>[1.8,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
			</plugin>
			<!-- for scala protobuf -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.rat</groupId>
				<artifactId>apache-rat-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.2</version>
						</plugin>
						<plugin>
							<groupId>net.alchim31.maven</groupId>
							<artifactId>scala-maven-plugin</artifactId>
							<version>3.2.2</version>
							<configuration>
								<jvmArgs>
									<jvmArg>-Xms64m</jvmArg>
									<jvmArg>-Xmx1024m</jvmArg>
								</jvmArgs>
							</configuration>
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${project.install.directory}</outputDirectory>
					<overWriteIfNewer>true</overWriteIfNewer>
					<excludeGroupIds>io.netty</excludeGroupIds>
					<excludeArtifactIds>netty, netty-all</excludeArtifactIds>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resource-one</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.install.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/target</directory>
									<includes>
										<include>${project.artifactId}-${project.version}.jar</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
				<reportSets>
					<reportSet>
						<id>html</id>
						<configuration>
							<doctitle>My API for ${project.name} ${project.version}</doctitle>
							<windowtitle>My API for ${project.name} ${project.version}</windowtitle>
						</configuration>
						<reports>
							<report>javadoc</report>
						</reports>
					</reportSet>
					<reportSet>
						<id>test-html</id>
						<configuration>
							<testDoctitle>My Test API for ${project.name} ${project.version}</testDoctitle>
							<testWindowtitle>My Test API for ${project.name}
								${project.version}</testWindowtitle>
						</configuration>
						<reports>
							<report>test-javadoc</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.tensorflow</groupId>
					<artifactId>libtensorflow_jni</artifactId>
					<version>${tensorflow.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>gpu</id>
			<properties>
				<project.install.directory>${project.basedir}/../jars/${project.version}-gpu</project.install.directory>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.tensorflow</groupId>
					<artifactId>libtensorflow_jni_gpu</artifactId>
					<version>${tensorflow.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>spark-1.3</id>
			<properties>
				<spark.version>1.3.1</spark.version>
			</properties>
		</profile>
		<profile>
			<id>spark-1.4</id>
			<properties>
				<spark.version>1.4.1</spark.version>
			</properties>
		</profile>
		<profile>
			<id>spark-1.5</id>
			<properties>
				<spark.version>1.5.2</spark.version>
			</properties>
		</profile>
		<profile>
			<id>spark-1.6</id>
			<properties>
				<spark.version>1.6.1</spark.version>
			</properties>
		</profile>
		<profile>
			<id>java8</id>
			<properties>
				<java.version>1.8</java.version>
			</properties>
		</profile>
		<profile>
			<id>scala-2.11</id>
			<properties>
				<scala.minor.version>2.11</scala.minor.version>
				<scala.complete.version>${scala.minor.version}.8</scala.complete.version>
			</properties>
		</profile>
	</profiles>

	<modules>
		<module>components</module>
		<module>component-pipe</module>
		<module>didentification</module>
		<module>component-custom</module>
		<module>examples</module>
	</modules>
</project>